服务端开发

1. 服务端开发总览：
服务端架构：服务端的领域特征是大规模的用户请求，以及 24 小时不间断的服务
业务流向：客户端 - LBS - 业务架构（服务）- DB（存储）
LBS:
	LBS（流量调度）的实现方式：DNS,LVS,NG， 4层，7层 -- 这一层可以优雅的处理服务升级（我们系统目前就很粗糙，没有处理升级的过程）
	连接数（并发数）指的是同时在服务中的请求数。也就是那些已经发送请求（Request），但是还没有收完应答（Response）的请求数量。
	IOPS，指的是平均每秒完成的请求（一问一答）的数量
	入向流量 ≈ IOPS * 请求包平均大小
	出向流量 ≈ IOPS * 应答包平均大小
DB:
	常见的存储中间件：键值存储（KV-Storage）；对象存储（Object Storage）；数据库（Database）；消息队列（MQ）；倒排索引（SearchEngine）
		对象存储（Object Storage）是桌面端操作系统与服务端操作系统分化的开端
	分布式数据库 CAP理论 （分布式架构， mysql支持方案？）
	参考：https://www.jianshu.com/p/f91124acafd2 或者 mysql官方文档
	文件系统：数据冗余（一般3副本）  Google GFS 分布式存储论文， 非结构化数据最佳的存储方式：对象存储
	缓存：存储（Storage）的加速器， cache , memcached（groupcache，解决读一致性的问题,使用函数式编程，比较小众）, Redis (指标：命中率)
业务架构：理解的不深入
	网络协议：http  protobuff, RPC 框架
	授权： token(2C), AK/SK(2B)
		OAuth 2.0: 
			1)开放接口 
				需要简单了解授权模式，授权流程
				第三方开放接口用的最多的一种场景是授权码模式（Authorization Code）
			2)提供openID (OpenID Connect协议  https://openid.net/connect/)
			  openID这个需求是如何被发现的？
	单元测试：推荐 httptest  https://github.com/qiniu/httptest go 环境
2.总结
  服务端技术的迭代，有一些和服务端开发相关，会影响到业务架构。
  而更多则和业务架构无关，属于服务治理的范畴。
  服务端开发与服务治理的边界在于，
  服务端开发致力于设计合适的业务架构来满足用户需求，而服务治理则致力于让服务端程序健康地为客户提供不间断的服务。
3。服务端的架构建议：未能完全理解 参考 https://time.geekbang.org/column/article/134384