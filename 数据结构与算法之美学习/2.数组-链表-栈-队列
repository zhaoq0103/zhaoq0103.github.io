数组 : CRUD
实现一个支持动态扩容的数组 
实现一个大小固定的有序数组，支持动态增删改操作 
实现两个有序数组合并为一个有序数组

链表 : CRUD
实现单链表、循环链表、双向链表，支持增删操作
实现单链表反转 
链表中环的检测
删除链表倒数第 n 个结点
实现两个有序的链表合并为一个有序链表
实现求链表的中间结点


LinkedHashMap --> 双向链表
双向循环链表

以上是练习任务

线性表：数组，链表，栈，队列
非线性表：树，堆，图

1.array：线性表，连续的内存空间和相同类型的数据
数组的时间复杂度：插入O(n), 随机访问O(1)
2.单链表、双向链表和循环链表
时间复杂度：插入O(n), 随机访问O(1)
LinkedHashMap（双向链表）
linked list:
基于链表实现 LRU 缓存淘汰算法:

chap07:
coding with list
带头链表

检查链表代码是否正确的边界条件有这样几个： 
如果链表为空时，代码是否能正常工作？ 
如果链表只包含一个结点时，代码是否能正常工作？
如果链表只包含两个结点时，代码是否能正常工作？ 
代码逻辑在处理头结点和尾结点的时候，代码是否能正常工作？
最后得出一个结论：
多写多练，提高写代码的能力


1.顺序栈，链式栈
动态扩容的顺序栈的入栈、出栈操作的时间复杂度分析：
入栈的均摊时间复杂度为 O(1)

表达式计算
括号匹配判断
浏览记录的实现（两个栈实现）


2.队列，循环队列、阻塞队列、并发队列
顺序队列和链式队列
确定好队空和队满的判定条件
队满时，(tail+1)%n=head

3.阻塞队列和并发队列（Disruptor）
阻塞队列 --- 生产者消费者模型
基于数组的循环队列，利用 CAS 原子操作，可以实现非常高效的并发队列
CAS（Compare and swap），即比较并交换，也是实现我们平时所说的自旋锁或乐观锁的核心操作


4. 并发队列和阻塞队列有什么区别，有时间深究一下