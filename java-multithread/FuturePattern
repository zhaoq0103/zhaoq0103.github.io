public class Main {
    public static void main(String[] args){
        System.out.println("Main Begin");
        Host host = new Host();
        Data data1 = host.Request(10, 'A');
        Data data2 = host.Request(20, 'B');
        Data data3 = host.Request(30, 'C');


        System.out.println("Main other job begin");
        try {
            Thread.sleep(2000);
        }catch (InterruptedException e){

        }
        System.out.println("Main other job end");

        System.out.println("data1 = " + data1.getContent());
        System.out.println("data2 = " + data2.getContent());
        System.out.println("data3 = " + data3.getContent());

        System.out.println("Main End");
    }
}


public class Host {
    public  Data Request(final int size, final char s){
        System.out.println(" request (" + size + ", " + s + ") BEGIN");

        //1. futureData
        final FutureData future = new FutureData();

        //2. 启动新线程
        new Thread(){
            @Override
            public void run() {
                RealData realData = new RealData(size, s);
                future.setRealData(realData);
            }
        }.start();

        System.out.println(" request (" + size + ", " + s + ") END");

        //3. 返回futureData
        return future;

    }
}


public interface Data {
    public abstract String getContent();
}

public class FutureData implements Data{
    private RealData realData;
    private boolean ready = false;


    public synchronized void setRealData(RealData realData){
       if(ready) return; //balk

        this.ready = true;
        this.realData = realData;
        notifyAll();
    }


    @Override
    public synchronized String getContent() {

//        try{
//            while ( !ready ){
//                wait();
//            }
//        }catch (InterruptedException e){
//
//        }

        while ( !ready ){
            try {
                wait();
            }catch (InterruptedException e){

            }
        }


        return realData.getContent();
    }
}



public class RealData implements Data{
    private String content;

    public RealData(int count, char c) {
        System.out.println(" make realdata (" + count + "， " + c + ") begin");
        char buffer[] = new char[count];
        for (int i = 0; i < count; i++) {
           buffer[i] = c;
           try {
               Thread.sleep(1000);
           }catch (InterruptedException e ){

           }
        }
        this.content = new String(buffer);
        System.out.println(" make realdata (" + count + "， " + c + ") end");
    }

    @Override
    public String getContent() {
        return content;
    }
}

